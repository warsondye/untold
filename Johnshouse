<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information - St. John's House</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #333;
            transition: all 0.3s ease;
        }

        .dark-mode {
            background-color: #333;
            color: #fff;
        }

        .container {
            max-width: 1200px;
            margin: 50px auto;
            background: #ffffff;
            padding: 30px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            position: relative;
            transition: all 0.3s ease;
        }

        .dark-mode .container {
            background: #444;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .header h1 {
            color: #2c3e50;
            font-size: 2.5rem;
            margin: 0;
        }

        .dark-mode .header h1 {
            color: #ecf0f1;
        }

        .logo {
            max-width: 100px;
        }

        .search-container {
            text-align: center;
            margin-bottom: 20px;
        }

        .search-container input {
            width: 50%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        .dark-mode .search-container input {
            background-color: #555;
            color: #fff;
            border-color: #666;
        }

        .filter-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .filter-container select, .filter-container button {
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #3498db;
            color: white;
            cursor: pointer;
        }

        .dark-mode .filter-container select,
        .dark-mode .filter-container button {
            background-color: #1abc9c;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            overflow: hidden;
            border-radius: 10px;
        }

        table thead {
            background-color: #3498db;
            color: white;
            cursor: pointer;
        }

        .dark-mode table thead {
            background-color: #2980b9;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 15px;
            text-align: center;
        }

        th {
            font-size: 1.1rem;
        }

        tbody tr:nth-child(odd) {
            background-color: #f9f9f9;
        }

        tbody tr:hover {
            background-color: #f1f1f1;
            transition: background-color 0.3s;
        }

        .dark-mode tbody tr:nth-child(odd) {
            background-color: #555;
        }

        a {
            color: #3498db;
            text-decoration: none;
            font-weight: bold;
        }

        .dark-mode a {
            color: #1abc9c;
        }

        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
            padding: 20px;
            border-radius: 10px;
            z-index: 1000;
        }

        .modal.active {
            display: block;
        }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        .modal-overlay.active {
            display: block;
        }

        .modal button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        @media screen and (max-width: 768px) {
            th, td {
                font-size: 0.9rem;
            }

            .search-container input {
                width: 80%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>St. John's House Student Information</h1>
            <img src="logo2.png" alt="St. John's House Logo" class="logo">
        </div>

        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Search for students by name, class, or NHIS number...">
        </div>

        <div class="filter-container">
            <select id="yearFilter">
                <option value="">Filter by Year Group</option>
                <option value="1">Year Group 1</option>
                <option value="2">Year Group 2</option>
                <option value="3">Year Group 3</option>
            </select>
            <button id="exportButton">Export to CSV</button>
            <button id="darkModeToggle">Toggle Dark Mode</button>
        </div>

        <table id="studentTable">
            <thead>
                <tr>
                    <th data-column="name">Name</th>
                    <th data-column="class">Class</th>
                    <th data-column="nhis">NHIS Number</th>
                    <th>Parent's Contact</th>
                </tr>
            </thead>
            <tbody>
                <!-- Students will be dynamically rendered here -->
            </tbody>
        </table>
    </div>

    <div class="modal-overlay" id="modalOverlay"></div>
    <div class="modal" id="studentModal">
        <h3 id="modalTitle"></h3>
        <p id="modalContent"></p>
        <button id="closeModal">Close</button>
    </div>

    <script>
        const students = [
            { name: "Godword Adjei", class: "sciencs 6b", nhis: "49470304", parentContact: "0200946948", yearGroup: 3 },
            { name: "Ibe Stephen", class: "Class 5B", nhis: "987654321", parentContact: "233247654321", yearGroup: 3 },
            { name: "Samuel Opoku", class: "Class 4C", nhis: "456123789", parentContact: "233249988776", yearGroup: 3 },
            { name: "Emily Brown", class: "Class 6A", nhis: "789654123", parentContact: "233241234568", yearGroup: 1 },
            { name: "Michael Johnson", class: "Class 5B", nhis: "321456987", parentContact: "233247654322", yearGroup: 2 },
            { name: "Sophia Wilson", class: "Class 4C", nhis: "654987321", parentContact: "233249988777", yearGroup: 3 }
        ];

        const searchInput = document.querySelector("#searchInput");
        const yearFilter = document.querySelector("#yearFilter");
        const exportButton = document.querySelector("#exportButton");
        const darkModeToggle = document.querySelector("#darkModeToggle");
        const studentTable = document.querySelector("#studentTable tbody");
        const modalOverlay = document.querySelector("#modalOverlay");
        const studentModal = document.querySelector("#studentModal");
        const modalTitle = document.querySelector("#modalTitle");
        const modalContent = document.querySelector("#modalContent");
        const closeModal = document.querySelector("#closeModal");

        function renderStudents(filteredStudents = students) {
            studentTable.innerHTML = "";
            filteredStudents.forEach(student => {
                const row = document.createElement("tr");
                row.innerHTML = ` 
                    <td>${student.name}</td>
                    <td>${student.class}</td>
                    <td>${student.nhis}</td>
                    <td>
                        <a href="tel:${student.parentContact}">Call</a> |
                        <a href="https://wa.me/${student.parentContact}" target="_blank">WhatsApp</a>
                    </td>
                `;
                row.addEventListener("click", () => openModal(student));
                studentTable.appendChild(row);
            });
        }

        function openModal(student) {
            modalTitle.textContent = student.name;
            modalContent.innerHTML = `
                <p><strong>Class:</strong> ${student.class}</p>
                <p><strong>NHIS Number:</strong> ${student.nhis}</p>
                <p><strong>Parent's Contact:</strong> <a href="tel:${student.parentContact}">${student.parentContact}</a> | <a href="https://wa.me/${student.parentContact}" target="_blank">WhatsApp</a></p>
            `;
            studentModal.classList.add("active");
            modalOverlay.classList.add("active");
        }

        function closeModalHandler() {
            studentModal.classList.remove("active");
            modalOverlay.classList.remove("active");
        }

        function filterStudents() {
            const query = searchInput.value.toLowerCase();
            const year = yearFilter.value;

            const filtered = students.filter(student => {
                const matchesQuery = student.name.toLowerCase().includes(query) || student.class.toLowerCase().includes(query) || student.nhis.includes(query);
                const matchesYear = year ? student.yearGroup == year : true;
                return matchesQuery && matchesYear;
            });

            renderStudents(filtered);
        }

        function exportToCSV() {
            const rows = [
                ["Name", "Class", "NHIS Number", "Parent's Contact"],
                ...students.map(student => [student.name, student.class, student.nhis, student.parentContact])
            ];

            const csvContent = rows.map(row => row.join(",")).join("\n");
            const blob = new Blob([csvContent], { type: "text/csv" });
            const url = URL.createObjectURL(blob);
            const link = document.createElement("a");
            link.href = url;
            link.download = "students.csv";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function toggleDarkMode() {
            document.body.classList.toggle("dark-mode");
        }

        // Event listeners
        searchInput.addEventListener("input", filterStudents);
        yearFilter.addEventListener("change", filterStudents);
        exportButton.addEventListener("click", exportToCSV);
        darkModeToggle.addEventListener("click", toggleDarkMode);
        closeModal.addEventListener("click", closeModalHandler);
        modalOverlay.addEventListener("click", closeModalHandler);

        // Initial render
        renderStudents();
    </script>
</body>
</html>
